import requests
import pandas as pd
from io import StringIO


def fetch_string_interactions(ensp_ids):
    """Получение данных о взаимодействиях белков и сохранение в CSV"""
    params = {
        "species": 9606,
        "required_score": 900,
        "network_type": "full",
        "caller_identity": "my_app",
        "add_nodes": 1
    }

    try:
        # Формируем запрос
        identifiers = "%0d".join(ensp_ids)
        url = f"https://string-db.org/api/tsv/network?identifiers={identifiers}"

        # Выполняем запрос
        response = requests.get(url, params=params, timeout=20)
        response.raise_for_status()

        # Парсим ответ
        data = StringIO(response.text)
        interactions = pd.read_csv(data, sep="\t")

        # Фильтруем только исходные белки
        requested_ids = {f"9606.{ensp}" for ensp in ensp_ids}
        filtered = interactions[
            interactions['stringId_A'].isin(requested_ids) &
            interactions['stringId_B'].isin(requested_ids)
            ]

        # Сохраняем в CSV
        filtered.to_csv(
            "protein_interactions.csv",
            index=False,
            encoding="utf-8-sig",  # Для корректного отображения в Excel
            sep=","  # Стандартный разделитель для CSV
        )

        print("\nДанные успешно сохранены в protein_interactions.csv!")
        return filtered

    except Exception as e:
        print(f"Ошибка: {str(e)}")
        return pd.DataFrame()


# Пример использования
if __name__ == "__main__":
    ensp_ids

    result = fetch_string_interactions(ensp_ids)

    if not result.empty:
        print(f"\nНайдено взаимодействий: {len(result)}")
        print(result[['preferredName_A', 'preferredName_B', 'score']])
